// /home/test1/koch/proto/maum/m2u/common/dialog.proto
message SystemContext {
  // 사용자
  maum.m2u.common.User user = 1;
  // 다비아스
  maum.m2u.common.Device device = 2;
  // 위치
  maum.m2u.common.Location location = 3;
}
/**
 * maum.ai M2U 플랫폼, 대화 진행에 관련된 대화 관련 데이터 타입들 정의
 *
 * 여기에서는 사용자의 발화, 시스템 발화,
 * 대화를 진행하는 데 필요한 모든 데이터 타입은 크게 몇가지 정의할 수 있다.
 *
 * <입력 형식>
 *
 * Utter : 사용자의 입력 메시지
 * User : 사용자
 * Device: 위치 정보
 * Session: 세션 정보
 * Location: 위치 정보
 * Document: NLU 결과물
 * Event: Directive에 대응하는 이벤트 구조
 *
 * <출력 형식>
 * Speech : 응답 출력 메시지
 * Card: 화면에 다양한 출력을 원하는 메시지
 * Directive: 단말의 행동을 제어하는 메시지
 * Meta: 단말의 동작에 필요한 부가 데이터
 *
 * namespace: maum.m2u.common
 */
syntax = "proto3";
import "google/protobuf/struct.proto";
import "maum/common/lang.proto";
import "maum/m2u/common/user.proto";
import "maum/m2u/common/device.proto";
import "maum/m2u/common/location.proto";
package maum.m2u.common;
// ----------------------------------------------------------------------
// 사용자 발화: Utter
// ----------------------------------------------------------------------
/**
 * 사용자의 입력 데이터
 * 입력의 유형은 매우 다양할 수 있습니다.
 */
/**
 * 명시적으로 새로운 챗봇을 엽니다. 새로운 대화 세션을 생성합니다.
 */
// ----------------------------------------------------------------------
// 시스템 발화: Speech
// ----------------------------------------------------------------------
/**
 * 응답으로 내보내는 발화 형태
 */
// ----------------------------------------------------------------------
// 세션: 세션 정보
// ----------------------------------------------------------------------
/**
 * 세션 정보
 *
 * 세션의 ID와 에션에 속한 컨텍스트 정보를 모두 가지고 있다.
 */
/**
 * 시스템 컨텍스트
 *
 * 시스템에서 정의된 컨텍스트 정보를 묶어서 하나로 표현합니다.
 * User, Device, Location 정보를 묶어서 하나로 처리합니다.
 */
