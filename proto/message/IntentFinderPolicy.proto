// /home/test1/koch/proto/maum/m2u/router/v3/intentfinder.proto
message IntentFinderPolicy {
  // 의도파악 정책의 이름
  string name = 1;
  // 의도파악 정책에 대한 설명
  string description = 2;
  // 기존 규칙들
  maum.common.Lang lang = 3;
  // 기본 스킬
  // 만일 각 스텝을 돈 결과 제대로된 의도 파익이 실패한 경우에는 이 값으로 채워야 한다.
  // 인텐트 파인더가 아예 동작하지 않거나 하는 경우에 동작을 해야할 수도 있습니다.
  string default_skill = 4;
  // 의도파악 단계들
  repeated IntentFindingStep steps = 5;
}
/**
 * maum.ai M2U 플랫폼 IntentFinder
 *
 * maum.ai M2U에서 사용자의 발화에 대한 의도 파일을 수행하는 IntentFinder 서비스는
 * NLU 과정을 수행하고 다양한 의도 분류기를 실행하여 그 결과를 통합할 수 있도록 하고 있다.
 *
 * - PCRE 기반의 Simple Classifier
 * - HMD
 * - DNN Classifier
 * - Python으로 구현되는 Custom Script
 * - 기타 고정 규칙으로 구성되어 있다.
 *
 * namespace: maum.m2u.router.v3
 */
syntax = "proto3";
package maum.m2u.router.v3;
import "google/protobuf/empty.proto";
import "maum/common/lang.proto";
import "maum/m2u/common/dialog.proto";
import "maum/brain/nlp/nlp.proto";
// 의도파악 서비스
// 의도파악 서비스는 하나의 대화에 최대 2번까지 요청를 받아들일 수 있다.
//
// 첫번째는 스킬을 찾는 과정인데, 결과는 2가지 입니다. 스킬을 찾거나 다른 chatbot으로
// 이전할 수 있습니다.
// 두번재 스킬을 찾는 경우에는 다른 대화로 전이하는 경우는 없고, 스킬만 찾게 됩니다.
// ----------------------------------------------------------------------
// FindIntentRequest
// ----------------------------------------------------------------------
/**
 * FindIntentRequest,
 *
 * 의도파악을 수행할 기본 정보
 * 의도파악 동작을 제어할 추가정보가 정의되어 있다.
 */
// ----------------------------------------------------------------------
// FindIntentResponse
// ----------------------------------------------------------------------
// 의도파악에 대한 응답
// 의도 파악에 대한 응답의 결과는 2가지로 병백히 나뉜다.
// 스킬 찾기 와 챗봇 이동
// FIXME: PEEK ANSWER 대상이어야 한다.
// -----------------------------------------------------------------------
// INTENT FINDER INSTANCE
// -----------------------------------------------------------------------
// intentFinder의 인스턴트 객체
// -----------------------------------------------------------------------
// INTENT FINDER POLICY
// -----------------------------------------------------------------------
// 의도 파악 정책
// 의도파악의 각 단계들의 집합이 의도 파악 정책이다.
// 의도 파악 정책에는 여러 개의 의도 파악 단계들이 들어 있다. 이 단계들은
// 순서대로 실행된다. 각 단계는 다양한 분류기를 사용하여 SKILL 또는 HINT를 찾아낸다.
// 논리적으로 SKILL 분류는 배타적 수행되지만, HINT를 구하는 과정은 병렬로 처리할 수 있다.
// 의도파악 단계
// 이 엔티티는 IntentFinder 에서 각 의도 파악을 수행하는 하나의 단계를 정의한 것이다.
// 의도파악 단계는 분류 모듈을 수행하는 방식을 정의할 수있다.
// 어떤 단계는 skill을 찾아내고 어떤 단계는 hint를 찾아낸다.
// 어떤 단계는 hint을 조합하여 skill로 정의할 수 있다.
//
// 이들이 모여서 정책으로 정의된다.
// 분류 방식
// 각 의도파악 단계에서는 다양한 분류 기법을 사용한다.
// 의도파익 결과에 대한 동작 제어
//
// 의도파악 결과가 나올 때 이들에 대한 동작을 제어할 수 있다.
// 어떤 의도파악 단계를 수행한 결과 SKILL이 식별되면 더 이상 추가적인 종작이 없이
// 수행을 중지할 수도 있다. 계속하여 추가적인 의도 파악을 수행할 수도 있다.
// 어떤 단계는 SKILL을 찾는 과정은 수행하지 않고 HINT만 찾아낼 수도 있다.
// 의도파악 이력
// 의도파악 정책에 정의된 각 단계를 수행한 이력을 담는다.
// 최종 결과물과 각 단계별 이력을 기록한다.
// 찾은 스킬 또느 힌트, 즉, 의도
// 스킬, 또는 관련 힌트들이 존재한다.
// 챗봇 전이는 새로운 챗봇 이름이 필요하다.
// 새로운 챗봇에는 기본 스킬이 존재 한다.
//
// TODO, 이 과정은 좀 더 구체적이고 더 심도깊은 분석이 필요하다.
// 대부분의 B2C 서비스들은 스킬 전이만 있지 챗본 전이는 애당초 없다.
// 우리는 다르고 다른 대안을 제시해야 한다.
// ----------------------------------------------------------------------
// 스크립트 규칙
// ----------------------------------------------------------------------
// classify() 에 넘겨줄 입력 파라미터
// customscript 함수 호출 후 결과 정보
// get_categories() 리턴값
// compose_hints() 함수의 입력 파라미터
// 힌트 조합으로 SKILL을 찾을 수 있도록 하는 파라미터
// get_compose_table() 리컨값
