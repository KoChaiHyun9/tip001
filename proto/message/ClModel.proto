// /home/test1/koch/proto/maum/brain/cl/train/cltrainer.proto
message ClModel {
  string model = 1; /// model name should be alphanum
  maum.common.LangCode lang = 2;
  repeated ClCategory categories = 11;
  int32 node_count = 21;
  int32 run_count = 22;
  bool has_lemma = 31;   // if has lemma, TextLemma of ClCategory is not empty.
  // when done or cancelled callback url will be called
  string callback_url = 100;
}
syntax = "proto3";
import "google/protobuf/empty.proto";
import "maum/common/lang.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
package maum.brain.cl.train;
// sentence with words.\t morp/type morp/type morp/type
// {
//   categories : [ "cate1", "cate2", "cate3" ],
//   text_lemmas : [
//     { text: "origin text", lemma: "origin/xx text/xx" }
//     { text: "origin text", lemma: "origin/xx text/xx" }
//     { text: "origin text", lemma: "origin/xx text/xx" }
//   ]
// }
// cate1 cate2 cate2
//
// DNN Classifier trainer service
// INTERNAL USE ONLY
// IF REMOTE is not 127.0.0.1, then reject it
