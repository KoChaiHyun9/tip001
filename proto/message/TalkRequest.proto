// /home/test1/koch/proto/maum/m2u/da/v3/talk.proto
message TalkRequest {
  // 사용자 발화 및 메타데이터
  maum.m2u.common.Utter utter = 1;
  // 시스템 컨텍스트
  maum.m2u.common.SystemContext system_context = 2;
  // 세션 및 컨텍스트
  maum.m2u.common.Session session = 3;
  // 챗봇의 이름
  string chatbot = 11;
  // 스킬의 이름
  string skill = 12;
  // 의도의 이름 *optional* 대부분 비어 있습니다.
  // 경우에 따라서 채워져서 오는 수도 있습니다.
  string intent = 13;
  // INTENT FINDER를 수행하고 난 결과 발견된 의도들을 모아 놓은 곳입니다.
  maum.m2u.router.v3.FoundIntent found_intent = 21;
  // NLU RESULT가 정상적으로 동작해야 합니다.
  maum.brain.nlp.Document nlu_result = 22;
}
syntax = "proto3";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
import "maum/common/lang.proto";
import "maum/m2u/common/dialog.proto";
import "maum/m2u/common/card.proto";
import "maum/m2u/common/event.proto";
import "maum/m2u/common/directive.proto";
import "maum/m2u/router/v3/intentfinder.proto";
import "maum/brain/nlp/nlp.proto";
import "maum/m2u/da/provider.proto";
package maum.m2u.da.v3;
/**
 * 대화를 수행하는 Diaog Agent 서비스
 *
 * 이중에서 대화를 수행하는 API는 다음과 같습니다.
 * Open: 새로운 대화를 새로이 시작합니다.
 */
/**
 * 새로운 대화 세션이 열럴 때, 이에 대한 응답을 할 수 있는 서비스를 지정합니다.
 * 이 경우에는 INTENT FINDER를 타지는 않고 바로 들어오게 됩니다.
 * SKILL은 CHATBOT의 설정에서 세션 OPEN 시점에 호출해야할 SKILL을 지정하도록 하고 있고
 * 이를 통해서 지정된 스킬 들이 호출되도록 되어 잇습니다.
 * 이 스킬은 하나 이상이 될 수 있습니다.
 */
/**
 * 이 스킬이 시작되었음을 알려줍니다.
 * 새로운 세션으로 스킬이 시작될 때, 해당 세션에 관련된 초기화 작업을 수행할 수 있습니다.
 * Router는 해당 세션에서 스킬을 새로이 시작할 때 OPEN을 호출해서 정보를 알려줘야 합니다.
 */
/**
 * 새로운 대화를 시작할 때, 해당 스킬에 대한 초기화 작업을 수행할 수 있습니다.
 *
 * 새로운 세션을 호출할 때 초기화할 일이 있으면 필요한 작업을 수행할 기회를 제공합니다.
 * 응답에서는 session에 대한 업데이트를 제공할 수 있습니다.
 */
/**
 * 라우터로부터 받는 대화 요청
 *
 * 대화 요청에는 대화, 시스템 컨텍스트, 세션 정보가 포함되어 있습니다.
 */
/**
 * 대화에 대한 응답은 크게 세 가지 이다.
 * 1. SpeechReponse: 정상적인 대화의 응답
 * 2. SkillTransition: SKILL에 대한 요청을 처리할 수 없어서 다른 SKILL로 전이하는 경우
 * 3. DialogDelegate: DEVICE의 추가적인 응답을 요청하고 이를 재처리하는 경우
 */
/**
 * 정상적인 대화 응답
 */
/**
 * 새로운 스킬로 전이한다.
 *
 * 라우터는 SkillTransition이 반복적으로 처리되는 것을 막야야 한다.
 * 하나의 대화에서 SkillTranstion이 한번 이상 발생해서는 안된다.
 */
/**
 * 사용자의 디바이스에서 처리해야할 추가적인 이벤트를 전송하고 이를 처리하도록 한다.
 * 이 경우에는 발화가 나가지 않고 클라이언트의 응답에 따라서 대화의 내용이 달라지게 된다.
 *
 * 다음 대화 시나리오에서 처리되도록 한다.
 * "아빠에게 전화 걸어줘" --> 단말에 "아빠" 전화번호를 전달하도록 한다.
 * "내 적금에 얼마 들어 있어" --> 단말에 "인증을 수행하여" 사용자 정보를 포함하여 전송하도록 한다.
 *
 * map은 포함된 Directive를 그대로 단말에 전송하게 되며, 단말이 바로 응답을 해야 한다.
 * 응답할 때에는 Dialog.Event를 통해서 전송하게 되며, 이 Event 데이터는 의도분류가 없이
 * 바로 해당 SKILL에 전달되어야 한다.
 *
 * 대화 위임이 발생한 경우, 챗봇 및 SKILL, INTENT, 세션 정보를 전달해준다.
 *
 */
/**
 * 이벤트 요청
 */
/**
 * 닫기 시점에 처리해야할 요청
 */
// 딛힌 스킬에 대한 응답 처리
